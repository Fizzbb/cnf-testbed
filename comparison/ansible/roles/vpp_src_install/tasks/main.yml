---
- name: Apt update
  apt: 
    update_cache: yes

- name: Get Mellanox Firmware
  get_url:
    url: http://content.mellanox.com/ofed/MLNX_OFED-{{mlnx_ver}}/MLNX_OFED_LINUX-{{mlnx_ver}}-{{arch}}.tgz
    dest: /srv/MLNX_OFED_LINUX-{{mlnx_ver}}-{{arch}}.tgz

- name: unarchive Mellanox Firmware
  unarchive:
    remote_src: true
    src: /srv/MLNX_OFED_LINUX-{{mlnx_ver}}-{{arch}}.tgz
    dest: /srv/
    creates: /srv/MLNX_OFED_LINUX-{{mlnx_ver}}-{{arch}}

- name: install main Debian prereqs
  apt:
    name: ['ethtool','tcl','libelf1','libnl-route-3-200','swig','libnuma1','quilt','python-libxml2','libltdl-dev','dkms','tk','gfortran','chrpath','pciutils','dpatch','pkg-config']
  when: ansible_os_family == 'Debian'

- name: install debhelper for Debian
  apt:
    name: 'debhelper'
  when: ansible_os_family == 'Debian'

- name: run Mlnx OFED install
  command: ./mlnxofedinstall --dpdk --upstream-libs --force
  args:
    chdir: /srv/MLNX_OFED_LINUX-{{mlnx_ver}}-{{arch}}

- name: remove ib_srpt
  command: modprobe -rv ib_srpt

- name: restart openibd service
  service:
    name: openibd
    state: restarted

- name: Install git and python - Redhat
  apt:
    name: ['git','python-devel','python-pip']
  when: ansible_os_family == 'RedHat'

- name: Install git and python - Debian
  apt:
    name: ['git','python-dev','python-pip']
  when: ansible_os_family == 'Debian'

- name: Install requied python modules
  pip:
    name: pexpect

- name: Clone Repo
  git:
    repo: 'https://gerrit.fd.io/r/vpp'
    dest: /srv/vpp
    version: origin/stable/1807
    update: no

- name: Set VPP DPDK mlx5 PMD use
  lineinfile:
    dest: /srv/vpp/build-data/platforms/vpp.mk
    regexp: '^.*vpp_uses_dpdk_mlx5_pmd.*'
    line: 'vpp_uses_dpdk_mlx5_pmd = yes'

- name: Build Install Deb
  expect: 
    chdir: /srv/vpp
    command: make install-dep
    echo: yes
    responses:
      "Do you want to continue.*": "Y"
    timeout: 300

- name: Build dpdk
  command: make dpdk-install-dev DPDK_MLX5_PMD=y
  args:
    chdir: /srv/vpp

- name: Build release
  command: make build-release
  args:
    chdir: /srv/vpp

- name: Build pkg
  command: make pkg-deb vpp_uses_dpdk_mlx5_pmd=yes
  args:
    chdir: /srv/vpp
  when: ansible_os_family == 'Debian'

- name: find vpp debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp_18*deb"
  register: vpp

- name: find vpp-lib debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp-lib_18*.deb"
  register: vpp_lib

- name: find vpp-plugins debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp-plugins_18*.deb"
  register: vpp_plugin

- name: find vpp-api-python debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp-api-python_18*.deb"
  register: vpp_api_python

- name: Install vpp library packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp_lib['files']}}"

- name: Install vpp packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp['files']}}"

- name: Install vpp plugins packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp_plugin['files']}}"

- name: Install vpp api python packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp_api_python['files']}}"

- name: restart vpp service
  service:
    name: vpp
    state: restarted
