---
- name: Apt update
  apt: 
    update_cache: yes

- name: Get Mellanox Firmware
  get_url:
    url: http://content.mellanox.com/ofed/MLNX_OFED-4.4-2.0.7.0/MLNX_OFED_LINUX-4.4-2.0.7.0-ubuntu18.04-x86_64.tgz
    dest: /srv/mlnx.tgz

- name: unarchive Mellanox Firmware
  unarchive:
    remote_src: true
    src: /srv/mlnx.tgz
    dest: /srv/mlnx/
    creates: /srv/mlnx/

- name: run Mlnx OFED install
  command: ./mlnxofedinstall --dpdk --upstream-libs --force

- name: restart openibd service
  service:
    name: openibd
    state: restarted

- name: Install git
  apt:
    name: git

- name: Install requied python modules
  pip:
    name: pexpect

- name: Clone Repo
  git:
    repo: 'https://gerrit.fd.io/r/vpp'
    dest: /srv/vpp
    version: origin/stable/1807
    update: no

- name: Set VPP Users
  command: sed -i '/vpp_uses_dpdk_mlx5_pmd/s/^# //g' build-data/platforms/vpp.mk 
  args:
    chdir: /srv/vpp

- name: Build Install Deb
  expect: 
    chdir: /srv/vpp
    command: make install-dep
    echo: yes
    responses:
      "Do you want to continue.*": "Y"
    timeout: 300

- name: Build dpdk
  command: make dpdk-install-dev DPDK_MLX5_PMD=y
  args:
    chdir: /srv/vpp

- name: Build release
  command: make build-release
  args:
    chdir: /srv/vpp

- name: Build pkg
  command: make pkg-deb vpp_uses_dpdk_mlx5_pmd=yes
  args:
    chdir: /srv/vpp

- name: find vpp debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp_18*deb"
  register: vpp

- name: find vpp debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp-lib_18*.deb"
  register: vpp_lib

- name: find vpp debs to install
  find:
    paths: /srv/vpp
    recurse: yes
    patterns: "vpp-plugins_18*.deb"
  register: vpp_plugin

- name: Install vpp library packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp_lib['files']}}"

- name: Install vpp packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp['files']}}"

- name: Install vpp plugins packages
  command: dpkg -i {{item.path}}
  with_items: "{{vpp_plugin['files']}}"

#- name: Install vpp-lib
#  command: dpkg -i build-root/vpp-lib_18.07.1-11~*-dirty_amd64.deb
#  args: 
#    chdir: /srv/vpp
#
#- name: Install vpp_18
#  command: dpkg -i build-root/vpp_18.07.1-11~*-dirty_amd64.deb
#  args:
#    chdir: /srv/vpp
#
#- name: Intall vpp plugins
#  command: dpkg -i build-root/vpp-plugins_18.07.*-dirty_amd64.deb
#  args:
#    chdir: /srv/vpp
