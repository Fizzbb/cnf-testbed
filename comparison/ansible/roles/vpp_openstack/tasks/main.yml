- name: setup vpp repo for RedHat
  template:
    src: fdio.repo
    dest: /etc/yum.repos.d/fdio.repo
  when: ansible_os_family == "RedHat"
  register: vpp_sh_rh

#- name: get VPP install script for RedHat
#  get_url:
#    url: https://packagecloud.io/install/repositories/fdio/release/script.rpm.sh
#    dest: /root/vpp.sh
#    mode: 0755
#  when: ansible_os_family == "RedHat"
#  register: vpp_sh_rh

- name: setup vpp repo for Ubuntu
  template:
    src: 99fd.io.list
    dest: /etc/apt/sources.list.d/99fd.io.list
  when: ansible_os_family == "Debian"
  register: vpp_sh_deb

#- name: get VPP install script for Ubuntu
#  get_url:
#    url: https://packagecloud.io/install/repositories/fdio/release/script.deb.sh
#    dest: /root/vpp.sh
#    mode: 0755
#  when: ansible_os_family == "Debian"
#  register: vpp_sh_deb

#- name: run VPP install script
#  command: /root/vpp.sh
#  when: vpp_sh_rh.changed or vpp_sh_deb.changed
#
- name: install dpdk on RedHat
  yum:
    name: ['libibverbs','dpdk']
  when: ansible_os_family == "RedHat"

- name: install dpdk on Debian
  yum:
    update_cache: yes
    name: ['libibverbs-dev','dpdk']
  when: ansible_os_family == "Debian"

- name: install vpp service(s) RedHat
  yum:
    name: ["vpp","vpp-plugins","vpp-devel","vpp-api-python","vpp-api-lua","vpp-api-java"]
  when: ansible_os_family == "RedHat"

- name: install vpp service(s) Ubuntu
  apt:
    update_cache: yes
    name: ["vpp","vpp-plugins","vpp-dev","vpp-dbg","vpp-api-python","vpp-api-lua","vpp-api-java"]
  when: ansible_os_family == "Debian"

- name: install vpp startup with vlan interface pciid
  template:
    src: startup.conf
    dest: /etc/vpp/startup.conf

- name: install vpp interface setup
  template:
    src: vpp-interface.conf
    dest: /etc/vpp-interface.conf

- name: restart vpp service
  service:
    name: vpp
    state: restarted

- name: create ml2 config dir
  file:
    dest: /etc/neutron/plugins/ml2
    state: directory

- name: update ml2 config for vpp
  template:
    src: ml2_conf.j2
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini

- name: enable python pip - RedHat
  yum:
    name: ['python-devel','python-pip']
  when: ansible_os_family == "RedHat"

- name: enable python pip - Debian
  yum:
    name: ['python-dev','python-pip']
  when: ansible_os_family == "Debian"

- name: get vpp plugin code
  git:
    repo: https://github.com/openstack/networking-vpp
    dest: /root/networking-vpp
    update: no
- name: install openstack networking-vpp plugin
  pip:
    name: /root/networking-vpp

- name: add vpp-agent script
  template:
    src: vpp-agent
    dest: /usr/local/bin/vpp-agent
    mode: 0755

- name: add vpp-agent systemd service
  template:
    src: vpp-agent.service
    dest: /usr/lib/systemd/system/vpp-agent.service
    mode: 0644

- name: add vpp-agent multi-user.wants link
  file:
    state: link
    src: /usr/lib/systemd/system/vpp-agent.service
    dest: /etc/systemd/system/multi-user.target.wants/vpp-agent.service

- name: restart neutron service
  service:
    name: neutron-server
    state: restarted
  ignore_errors: true

- name: restart vpp-agent service
  service:
    enabled: true
    name: vpp-agent
    state: restarted

#- name: uninstall sqlparse
#  pip:
#    name: sqlparse
#    state: absent
#- name: uninstall sqlparse
#  pip:
#    name: sqlparse
#    state: latest
