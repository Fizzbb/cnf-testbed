WIP: Steps to deploy the testbed for different environments
---

## Common Steps

1. Clone https://github.com/cncf/cnf-testbed
2. Install any pre-requites
   - Install [Docker](https://docs.docker.com/install/)
   - Install [git](https://help.github.com/articles/set-up-git/)
3. Setup Packet account 
   - Create a [Packet account](https://www.packet.net/) ([help page](https://help.packet.net/article/13-portal#display--description))
   - Create a Packet project
   - Take note of the Project UUID from the Project Settings page
   - Create a Project API key
   - Take note of the Project API key
   - Add your personal ssh key to the Packet project / account

For additional optimization of the quad-Intel Packet machines (eg. turning on hyper-threading) see the [quad Intel install docs](docs/quad_intel_install.md)

## Openstack deploy

See [steps to deploy openstack documentation](docs/openstack_deploy.md) for specifics on how to deploy.

Overview of deploy stages for OpenStack

1. Create configuration with Packet API, number of nodes, etc
1. Run the [openstack](https://github.com/cncf/cnf-testbed/blob/38a89ad2dde59711fda8015308a1f0b19f50e946/tools/deploy_openstack_cluster.sh) deploy cluster script which provisions the Packet machines with Terraform
1. Terraform starts Ansible which pre-configures the Packet machines (using the openstack infrastructure playbook). The playbook configures the data plane interfaces, installs mellanox drivers, optimizes grub config and reboots the compute nodes
1. Ansible then runs the openstack install playbook, which configures the  Packet switch and VLANs and then deploys OpenStack using Chef to the Packet nodes
1. Ansible then installs & configures VPP as a vSwitch using the Openstack vpp-networking plugin to all compute nodes in the cluster
1. All OpenStack compute nodes are available for scheduling


## K8s

See [steps to deploy k8s documentation](https://github.com/cncf/cnf-testbed/blob/master/docs/k8s_deploy.md) for specifics on how to deploy.


Overview of deploy stages for K8s

1. Create configuration with Packet API, number of nodes, etc ([k8s example](https://github.com/cncf/cnf-testbed/blob/master/tools/k8s_benchmark_quad_intel.env.example))
1. Run the ([k8s](https://github.com/cncf/cnf-testbed/blob/38a89ad2dde59711fda8015308a1f0b19f50e946/tools/deploy_k8s_cluster.sh) deploy cluster script which provisions the Packet machines and starts the K8s bootstrap process
1. Cloud-init bootstraps the Kubernetes cluster on the Packet nodes. 
1. The k8s vpp vswitch installer runs the Ansible k8s vpp vswitch playbook which configures the Packet switch and VLANs 
1. Ansible then optimizes the system configuration, installs & configures the VPP vSwitch and reboots the worker nodes

